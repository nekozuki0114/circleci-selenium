# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.7.3-browsers
      - image: geranium/custamdvwa    
        name: example123123123.com
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - setup_remote_docker
      - checkout    
 # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

      - run: mkdir test-reports
      #ここから下がVaddyのセットアップ
      - run: sudo rm -rf /var/lib/apt/lists/* && sudo apt-get update
      - run: sudo apt-get install openjdk-8-jre

      - run: git clone https://github.com/vaddy/go-vaddy.git
    
      - run: touch go-vaddy/privatenet/conf/vaddy.conf
      - run: echo export VADDY_AUTH_KEY=\"d6120ce85eb88afc8b30528437a7487dbac0b6f04e0da2bc\" >>  go-vaddy/privatenet/conf/vaddy.conf  
      - run: echo export VADDY_FQDN=\"www.example123123123.com\" >>  go-vaddy/privatenet/conf/vaddy.conf
      - run: echo export VADDY_VERIFICATION_CODE="f5b30903bb749fe3447b" >>  go-vaddy/privatenet/conf/vaddy.conf
      - run: echo export VADDY_USER=\"shikimeguru\" >>  go-vaddy/privatenet/conf/vaddy.conf
      - run: echo export VADDY_YOUR_LOCAL_IP=\"example123123123.com\" >> go-vaddy/privatenet/conf/vaddy.conf
      - run: echo export export VADDY_YOUR_LOCAL_PORT=\"80\" >> go-vaddy/privatenet/conf/vaddy.conf
      - run: cat go-vaddy/privatenet/conf/vaddy.conf
      - run: ls go-vaddy
      - run: ls go-vaddy/privatenet
      - run: ls go-vaddy/privatenet/conf 
      - run: cd go-vaddy/privatenet/ && ./vaddy_privatenet.sh connect
      - run: cd go-vaddy/privatenet/ && ./vaddy_privatenet.sh scan
      - run: cd go-vaddy/privatenet/ && ./vaddy_privatenet.sh disconnect
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest test_google.py -v --junit-xml=test-results/regression/results.xml

      - store_artifacts:
          path: test-reports/
          destination: test-reports

      - store_test_results:
          path: test-results

workflows:
  version: 2
  normal_workflow:
    jobs:
      - build
  schedule_workflow:
    triggers:
      - schedule:
          cron: "1 7 * * *" # UTCで記述。-9
          filters:
            branches:
              only:
                - master
    jobs:
      - build
